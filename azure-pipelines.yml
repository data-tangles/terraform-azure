trigger:
- none

stages:

- stage: 'DevEnvironmentNetworking'
  dependsOn: []
  displayName: Dev Environment Networking

  jobs:
    - job: 'TerraformInitPlan_Networking'
      displayName: 'Initialize and Plan Terraform for Dev Environment Networking'
      pool: Self-Hosted
      
      steps:
        - task: TerraformCLI@0
          displayName: 'Dev Networking Terraform Init'
          inputs:
            command: 'init'
            backendType: 'azurerm'
            workingDirectory: '$(System.DefaultWorkingDirectory)/01_vnet_subnet_nsg'
            backendServiceArm: 'Visual Studio Enterprise Subscription - MPN'
            backendAzureRmResourceGroupName: 'rg-storage-prod-san-01'
            backendAzureRmStorageAccountName: 'stprodtfsan01'
            backendAzureRmContainerName: 'dev-tfstate'
            backendAzureRmKey: 'dev.networking.terraform.tfstate'
            allowTelemetryCollection: false

        - task: TerraformCLI@0
          displayName: 'Dev Networking Terraform Plan'
          inputs:
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/01_vnet_subnet_nsg/'
            commandOptions: '-var-file="/terraform/variables/terraform-azure/vnet_subnet_nsg/dev.tfvars'
            environmentServiceName: 'Visual Studio Enterprise Subscription - MPN'
            allowTelemetryCollection: false
            
- stage: 'DevEnvironmentNetworkingApply'
  dependsOn: []
  displayName: Dev Environment Networking Apply
  
  jobs:          
    - deployment: 'TerraformApply_Networking'
      displayName: 'Apply Terraform for Dev Environment Networking'
      pool: Self-Hosted
      environment: Dev
      strategy:
        runOnce:
          deploy:
            steps:
              - task: TerraformCLI@0
                inputs:
                  command: 'apply'
                  workingDirectory: '$(System.DefaultWorkingDirectory)/01_vnet_subnet_nsg/'
                  commandOptions: '-var-file="/terraform/variables/terraform-azure/vnet_subnet_nsg/dev.tfvars'
                  environmentServiceName: 'Visual Studio Enterprise Subscription - MPN'
                  allowTelemetryCollection: false
            
- stage: 'DevEnvironmentKeyVault'
  dependsOn: []
  displayName: Dev Environment Key Vault
  
  jobs:          
    - job: 'TerraformInitPlan_KeyVault'
      displayName: 'Initialize and Plan Terraform for Dev Environment Key Vault'
      pool: Self-Hosted
      
      steps:
        - task: TerraformCLI@0
          displayName: 'Dev Key Vault Terraform Init'
          inputs:
            command: 'init'
            backendType: 'azurerm'
            workingDirectory: '$(System.DefaultWorkingDirectory)/02_key_vault'
            backendServiceArm: 'Visual Studio Enterprise Subscription - MPN'
            backendAzureRmResourceGroupName: 'rg-storage-prod-san-01'
            backendAzureRmStorageAccountName: 'stprodtfsan01'
            backendAzureRmContainerName: 'dev-tfstate'
            backendAzureRmKey: 'dev.keyvault.terraform.tfstate'
            allowTelemetryCollection: false

        - task: TerraformCLI@0
          displayName: 'Dev Key Vault Terraform Plan'
          inputs:
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/02_key_vault/'
            commandOptions: '-var-file="/terraform/variables/terraform-azure/key_vault/dev.tfvars'
            environmentServiceName: 'Visual Studio Enterprise Subscription - MPN'
            allowTelemetryCollection: false
            
- stage: 'DevEnvironmentKeyVaultApply'
  dependsOn: []
  displayName: Dev Environment Key Vault Apply
  
  jobs:          
    - deployment: 'TerraformApply_KeyVault'
      displayName: 'Apply Terraform for Dev Environment Key Vault'
      pool: Self-Hosted
      environment: Dev
      strategy:
        runOnce:
          deploy:
            steps:
              - task: TerraformCLI@0
                inputs:
                  command: 'apply'
                  workingDirectory: '$(System.DefaultWorkingDirectory)/02_key_vault/'
                  commandOptions: '-var-file="/terraform/variables/terraform-azure/key_vault/dev.tfvars'
                  environmentServiceName: 'Visual Studio Enterprise Subscription - MPN'
                  allowTelemetryCollection: false
            
- stage: 'DevEnvironmentLinuxVM'
  dependsOn: []
  displayName: Dev Environment Linux VM

  jobs:          
    - job: 'TerraformInitPlan_LinuxVM'
      displayName: 'Initialize and Plan Terraform for Dev Environment Linux VM'
      pool: Self-Hosted
      steps:
        - task: TerraformCLI@0
          displayName: 'Dev Linux VM Terraform Init'
          inputs:
            backendType: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/virtual_machine/linux/'
            backendServiceArm: 'Visual Studio Enterprise Subscription - MPN'
            backendAzureRmResourceGroupName: 'rg-storage-prod-san-01'
            backendAzureRmStorageAccountName: 'stprodtfsan01'
            backendAzureRmContainerName: 'dev-tfstate'
            backendAzureRmKey: 'dev.virtualmachines.terraform.tfstate'
            allowTelemetryCollection: false

        - task: TerraformCLI@0
          displayName: 'Dev Linux VM Terraform Plan'
          inputs:
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/virtual_machine/linux/'
            commandOptions: '-var-file="/terraform/variables/terraform-azure/virtual_machine/linux/dev.tfvars'
            environmentServiceName: 'Visual Studio Enterprise Subscription - MPN'
            allowTelemetryCollection: false
            
- stage: 'DevEnvironmentLinuxVMApply'
  dependsOn: []
  displayName: Dev Environment Linux VM Apply
  
  jobs:          
    - deployment: 'TerraformApply_LinuxVM'
      displayName: 'Apply Terraform for Dev Environment Linux VM'
      pool: Self-Hosted
      environment: Dev
      strategy:
        runOnce:
          deploy:     
            steps:
              - task: TerraformCLI@0
                inputs:
                  command: 'apply'
                  workingDirectory: '$(System.DefaultWorkingDirectory)/virtual_machine/linux/'
                  commandOptions: '-var-file="/terraform/variables/terraform-azure/virtual_machine/linux/dev.tfvars'
                  environmentServiceName: 'Visual Studio Enterprise Subscription - MPN'
                  allowTelemetryCollection: false

- stage: 'DevEnvironmentWindowsVM'
  dependsOn: []
  displayName: Dev Environment Windows VM

  jobs:
    - job: 'TerraformInitPlan_WindowsVM'
      displayName: 'Initialize and Plan Terraform for Dev Environment Windows VM'
      pool: Self-Hosted
      
      steps:
        - task: TerraformCLI@0
          displayName: 'Dev Windows VM Terraform Init'
          inputs:
            backendType: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/virtual_machine/windows/'
            backendServiceArm: 'Visual Studio Enterprise Subscription - MPN'
            backendAzureRmResourceGroupName: 'rg-storage-prod-san-01'
            backendAzureRmStorageAccountName: 'stprodtfsan01'
            backendAzureRmContainerName: 'dev-tfstate'
            backendAzureRmKey: 'dev.virtualmachines.terraform.tfstate'
            allowTelemetryCollection: false

        - task: TerraformCLI@0
          displayName: 'Dev Windows VM Terraform Plan'
          inputs:
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/virtual_machine/windows/'
            commandOptions: '-var-file="/terraform/variables/terraform-azure/virtual_machine/windows/dev.tfvars'
            environmentServiceName: 'Visual Studio Enterprise Subscription - MPN'
            allowTelemetryCollection: false

- stage: 'DevEnvironmentWindowsVMApply'
  dependsOn: []
  displayName: Dev Environment Windows VM Apply
  
  jobs:          
    - deployment: 'TerraformApply_WindowsVM'
      displayName: 'Apply Terraform for Dev Environment Windows VM'
      pool: Self-Hosted
      environment: Dev
      strategy:
        runOnce:
          deploy:
            steps:
              - task: TerraformCLI@0
                inputs:
                  command: 'apply'
                  workingDirectory: '$(System.DefaultWorkingDirectory)/virtual_machine/windows/'
                  commandOptions: '-var-file="/terraform/variables/terraform-azure/virtual_machine/windows/dev.tfvars'
                  environmentServiceName: 'Visual Studio Enterprise Subscription - MPN'
                  allowTelemetryCollection: false
      
