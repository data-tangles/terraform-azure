name: AD Lab Create CI

on:
  workflow_dispatch: 
    
permissions:
  contents: write
  issues: write
  id-token: write

jobs:
  init_and_plan:
    name: Terraform Init and Plan
    runs-on: ubuntu-latest

    env:
      SOPS_VERSION: 3.9.4

    outputs:
      planExitcode: ${{ steps.terraformPlan.outputs.exitcode }}

    steps:

      - name: Checkout 🔔
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Azure Login with OIDC 🔑
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Decrypt SOPS encrypted variables 🪙
        run: |
          curl -LO https://github.com/getsops/sops/releases/download/v${{ env.SOPS_VERSION }}/sops-v${{ env.SOPS_VERSION }}.linux.amd64
          sudo mv sops-v${{ env.SOPS_VERSION }}.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops
          export SOPS_AGE_KEY=${{ secrets.SOPS_AGE_KEY }}
          sops --decrypt ./labs/ad_lab/terraform.sops.tfvars > ./labs/ad_lab/terraform.tfvars

      - name: Install Terraform ⛰️
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3

      - name: Terraform Init 🏃
        id: terraformInit
        run: terraform init
        working-directory: ./labs/ad_lab

      - name: Terraform Plan 🗺️
        id: terraformPlan
        run: |
          terraform plan -input=false -no-color -out ${{ github.run_id }}.tfplan -detailed-exitcode
        working-directory: ./labs/ad_lab

      - name: Cache Terraform Plan 📦
        uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ./labs/ad_lab/**
          key: ${{ github.run_id }}  

  apply:
    name: Terraform Apply
    needs:
      - init_and_plan
    if: needs.init_and_plan.outputs.planExitcode == 2
    runs-on: ubuntu-latest

    steps:

      - name: Manual Approval 🚦
        uses: trstringer/manual-approval@662b3ddbc7685f897992051e87e1b4b58c07dc03 # v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: data-tangles
          minimum-approvals: 1
          issue-title: "Terraform Apply - ${{ github.workflow }}"
          issue-body: "Please approve or deny the Terraform Apply operation"
          exclude-workflow-initiator-as-approver: false

      - name: Checkout 🔔
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Azure Login with OIDC 🔑
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Restore Terraform Plan 🗺️
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ./labs/ad_lab/**
          key: ${{ github.run_id }}

      - name: Install Terraform ⛰️
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3

      - name: Terraform Apply 🚀
        run: terraform apply ${{ github.run_id }}.tfplan
        working-directory: ./labs/ad_lab

